"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const net = require("net");
class SyncRequest extends net.Socket {
    constructor(config) {
        super();
        this.config = config;
        this.toSendLast = "";
    }
    async start() {
        return new Promise((resolve, reject) => {
            this.once('error', reject.bind(this));
            this.once('connect', () => {
                let headers = [];
                headers = headers.concat([
                    this.config.method.toUpperCase() + " " + this.config.path + " HTTP/1.1",
                    "Host: " + this.config.host,
                    "Accept: */*",
                    "Accept-Language: en-us",
                    "Accept-Encoding: gzip, deflate",
                    "User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)"
                ]);
                if (this.config.method === 'post') {
                    let postData = this.config.postData;
                    let data = postData.data;
                    headers.push("Content-Type: " + postData.type);
                    headers.push("Content-Length: " + data.length);
                    headers.push("");
                    headers.push(data.substr(0, data.length - 1));
                    this.toSendLast = data[data.length - 1];
                }
                else {
                    this.toSendLast = "\r\n\r\n";
                }
                this.write(headers.join("\n"));
                resolve();
            });
            this.connect(this.config.port, this.config.host);
        });
    }
    async terminate() {
        this.setNoDelay(true);
        this.write(this.toSendLast);
    }
}
exports.SyncRequest = SyncRequest;
